<?php

namespace MToolkit\Core;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-10-10 at 16:57:22.
 */
class MListTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var MList
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new MList;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers MToolkit\Core\MList::append
     * @todo   Implement testAppend().
     */
    public function testAppend()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::appendArray
     * @todo   Implement testAppendArray().
     */
    public function testAppendArray()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::appendList
     * @todo   Implement testAppendList().
     */
    public function testAppendList()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::at
     * @todo   Implement testAt().
     */
    public function testAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::back
     * @todo   Implement testBack().
     */
    public function testBack()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::clear
     * @todo   Implement testClear().
     */
    public function testClear()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::contains
     * @todo   Implement testContains().
     */
    public function testContains()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::count
     * @todo   Implement testCount().
     */
    public function testCount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::isEmpty
     * @todo   Implement testIsEmpty().
     */
    public function testIsEmpty()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::endsWith
     * @todo   Implement testEndsWith().
     */
    public function testEndsWith()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::first
     * @todo   Implement testFirst().
     */
    public function testFirst()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::front
     * @todo   Implement testFront().
     */
    public function testFront()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::indexOf
     * @todo   Implement testIndexOf().
     */
    public function testIndexOf()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::insert
     * @todo   Implement testInsert().
     */
    public function testInsert()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::last
     * @todo   Implement testLast().
     */
    public function testLast()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::lastIndexOf
     * @todo   Implement testLastIndexOf().
     */
    public function testLastIndexOf()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::length
     * @todo   Implement testLength().
     */
    public function testLength()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::move
     * @todo   Implement testMove().
     */
    public function testMove()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::pop_back
     * @todo   Implement testPop_back().
     */
    public function testPop_back()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::pop_front
     * @todo   Implement testPop_front().
     */
    public function testPop_front()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::prepend
     * @todo   Implement testPrepend().
     */
    public function testPrepend()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::push_back
     * @todo   Implement testPush_back().
     */
    public function testPush_back()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::push_front
     * @todo   Implement testPush_front().
     */
    public function testPush_front()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::removeAt
     * @todo   Implement testRemoveAt().
     */
    public function testRemoveAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::removeFirst
     * @todo   Implement testRemoveFirst().
     */
    public function testRemoveFirst()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::removeLast
     * @todo   Implement testRemoveLast().
     */
    public function testRemoveLast()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::removeOne
     * @todo   Implement testRemoveOne().
     */
    public function testRemoveOne()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::replace
     * @todo   Implement testReplace().
     */
    public function testReplace()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::size
     * @todo   Implement testSize().
     */
    public function testSize()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::startsWith
     * @todo   Implement testStartsWith().
     */
    public function testStartsWith()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::takeAt
     * @todo   Implement testTakeAt().
     */
    public function testTakeAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::takeFirst
     * @todo   Implement testTakeFirst().
     */
    public function testTakeFirst()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::reverse
     * @todo   Implement testReverse().
     */
    public function testReverse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::takeLast
     * @todo   Implement testTakeLast().
     */
    public function testTakeLast()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::getValue
     * @todo   Implement testGetValue().
     */
    public function testGetValue()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::fromArray
     * @todo   Implement testFromArray().
     */
    public function testFromArray()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::__toArray
     * @todo   Implement test__toArray().
     */
    public function test__toArray()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::offsetExists
     * @todo   Implement testOffsetExists().
     */
    public function testOffsetExists()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::offsetGet
     * @todo   Implement testOffsetGet().
     */
    public function testOffsetGet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::offsetSet
     * @todo   Implement testOffsetSet().
     */
    public function testOffsetSet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::offsetUnset
     * @todo   Implement testOffsetUnset().
     */
    public function testOffsetUnset()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::current
     * @todo   Implement testCurrent().
     */
    public function testCurrent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::key
     * @todo   Implement testKey().
     */
    public function testKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::next
     * @todo   Implement testNext().
     */
    public function testNext()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::rewind
     * @todo   Implement testRewind().
     */
    public function testRewind()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::valid
     * @todo   Implement testValid().
     */
    public function testValid()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MToolkit\Core\MList::slice
     * @todo   Implement testSlice().
     */
    public function testSlice()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
