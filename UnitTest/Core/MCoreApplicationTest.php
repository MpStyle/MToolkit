<?php

namespace MToolkit\Core;

require_once __DIR__ . '/../../Core/MCoreApplication.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-10-10 at 08:51:23.
 */
class MCoreApplicationTest extends \PHPUnit_Framework_TestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::setIsDebug
     * @todo   Implement testSetIsDebug().
     */
    public function testSetIsDebug()
    {
        $isDubug = true;

        MCoreApplication::setIsDebug( $isDubug );
        $this->assertEquals( $isDubug, MCoreApplication::isDebug() );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::isDebug
     * @todo   Implement testIsDebug().
     */
    public function testIsDebug()
    {
        $isDubug = true;

        MCoreApplication::setIsDebug( $isDubug );
        $this->assertEquals( $isDubug, MCoreApplication::isDebug() );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::setApplicationDirPath
     * @todo   Implement testSetApplicationDirPath().
     */
    public function testSetApplicationDirPath()
    {
        $path = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setApplicationDirPath( $path );

        $this->assertEquals( 0, array_search( $path, MCoreApplication::getApplicationDirPath() ) );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::getApplicationDirPath
     * @todo   Implement testGetApplicationDirPath().
     */
    public function testGetApplicationDirPath()
    {
        $path = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setApplicationDirPath( $path );

        $this->assertEquals( 0, array_search( $path, MCoreApplication::getApplicationDirPath() ) );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::getApplicationName
     * @todo   Implement testGetApplicationName().
     */
    public function testGetApplicationName()
    {
        $application = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setApplicationName( $application );

        $this->assertEquals( $application, MCoreApplication::getApplicationName() );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::getApplicationVersion
     * @todo   Implement testGetApplicationVersion().
     */
    public function testGetApplicationVersion()
    {
        $application = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setApplicationName( $application );

        $this->assertEquals( $application, MCoreApplication::getApplicationName() );
    }


    /**
     * @covers MToolkit\Core\MCoreApplication::getOrganizationDomain
     * @todo   Implement testGetOrganizationDomain().
     */
    public function testGetOrganizationDomain()
    {
        $application = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setOrganizationDomain( $application );

        $this->assertEquals( $application, MCoreApplication::getOrganizationDomain() );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::getOrganizationName
     * @todo   Implement testGetOrganizationName().
     */
    public function testGetOrganizationName()
    {
        $application = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setOrganizationName( $application );

        $this->assertEquals( $application, MCoreApplication::getOrganizationName() );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::setApplicationName
     * @todo   Implement testSetApplicationName().
     */
    public function testSetApplicationName()
    {
        $application = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setApplicationName( $application );

        $this->assertEquals( $application, MCoreApplication::getApplicationName() );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::setApplicationVersion
     * @todo   Implement testSetApplicationVersion().
     */
    public function testSetApplicationVersion()
    {
        $application = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setApplicationVersion( $application );

        $this->assertEquals( $application, MCoreApplication::getApplicationVersion() );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::setOrganizationDomain
     * @todo   Implement testSetOrganizationDomain().
     */
    public function testSetOrganizationDomain()
    {
        $application = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setOrganizationDomain( $application );

        $this->assertEquals( $application, MCoreApplication::getOrganizationDomain() );
    }

    /**
     * @covers MToolkit\Core\MCoreApplication::setOrganizationName
     * @todo   Implement testSetOrganizationName().
     */
    public function testSetOrganizationName()
    {
        $application = "alkdjaslkjda987as98d7ash32j4k23jhsd9786fxcz6wneb4nm23b";

        MCoreApplication::setOrganizationName( $application );

        $this->assertEquals( $application, MCoreApplication::getOrganizationName() );
    }
}
